#!/usr/bin/env bash

# Mirroring data is not configured per Engine in the engine.json file used to create the engine
# See examples in rest-server/data/test_resource.json file

export REST_SERVER_HOST=${REST_SERVER_HOST:-localhost}
export REST_SERVER_PORT=${REST_SERVER_PORT:-9090}

export MONGO_HOST=${MONGO_HOST:-localhost}
export MONGO_PORT=${MONGO_PORT:-27017}

export HARNESS_LOG_CONFIG="${HARNESS_HOME}/conf/logback.xml"
export HARNESS_LOG_PATH="${HARNESS_HOME}/logs"

# Harness Auth
#export HARNESS_AUTH_ENABLED=${HARNESS_AUTH_ENABLED:-false}
export HARNESS_AUTH_ENABLED=true

# Harness's Auth Server microservice auth
#export HARNESS_AUTH_SERVER_PROTECTED=${HARNESS_AUTH_SERVER_PROTECTED:-false}
export HARNESS_AUTH_SERVER_PROTECTED=true

# Can be hard-coded here or exported with the ENV, defaults to no id
# export ADMIN_USER_ID=some-user-id
export ADMIN_USER_ID=57df7d8b-309e-48e5-b2b6-41e1c9ac6b04
# Can override where this is stored, the default is where the CLI user's ssh keys are stored
export ADMIN_USER_SECRET_LOCATION=${ADMIN_USER_SECRET_LOCATION:-"$HOME/.ssh/${ADMIN_USER_ID}.secret"}

if [ -z "$ADMIN_USER_ID" ]; then
    USER_ARGS=""
else
    echo "ADMIN_USER_ID set to \"${ADMIN_USER_ID}\""
    USER_ARGS=" --client_user_id ${ADMIN_USER_ID} --client_user_secret_location ${ADMIN_USER_SECRET_LOCATION} "
fi
export USER_ARGS

# Reset
NC='\033[0m'           # Text Reset

# Regular Colors
RED='\033[0;31m'          # Red
GREEN='\033[0;32m'        # Green
YELLOW='\033[0;33m'       # Yellow
BLUE='\033[0;34m'         # Blue
PURPLE='\033[0;35m'       # Purple
CYAN='\033[0;36m'         # Cyan
WHITE='\033[0;37m'        # White

LINE="=================================================================="

GLINE="${GREEN}${LINE}"
RLINE="${LINE}${NC}"
